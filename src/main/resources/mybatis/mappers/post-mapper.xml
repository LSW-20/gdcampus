<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="postMapper">
	    <!-- 결과 매핑 -->
   <resultMap id="postResultMap" type="PostDto">
			<result column="POST_NO" property="postNo" />
			<result column="board_type_no" property="boardTypeNo" />
			<result column="user_no" property="userNo" />
			<result column="USER_NAME" property="writerName" />
			<result column="POST_TITLE" property="postTitle" />
			<result column="POST_CONTENT" property="postContent" />
			<result column="REGIST_DATE" property="registDate" />
			<result column="FILE_STATUS" property="fileStatus" />
			<result column="COUNT" property="count" />
			<result column="POST_TOP" property="postTop" />
			<result column="modify_date" property="modifyDate" />
			<result column="modify_user" property="modifyUser" />
			
			<collection resultMap="attachResultMap" property="attachList" />
	</resultMap>
	

	<resultMap id="attachResultMap" type="AttachDto">
		<result column="file_no" property="fileNo"/>
		<result column="equipNo" property="equipNo"/>
		<result column="apprNo" property="apprNo"/>
		<result column="file_no" property="fileNo"/>
		<result column="file_path" property="filePath"/>
		<result column="filesystem_name" property="filesystemName"/>
		<result column="original_name" property="originalName"/>
		<result column="POST_NO" property="postNo"/>
	</resultMap>

	<!-- 혹시라도 has a 관계(1:1)일 경우 => collection 대신에 association 으로 사용 -->

	<resultMap id="commentResultMap" type="commentDto">
		<result column="COMMENT_NO" property="commentNo" />
		<result column="USER_NO" property="userNo" />
		<result column="POST_NO" property="postNo" />
		<result column="commentWriter" property="commentWriter" />
		<result column="COMMENTER_ID" property="commenterId" />
		<result column="REF_COMMENT_N0" property="refCommentNo" />
		<result column="REGIST_DATE" property="registDate" />
		<result column="COMMENT" property="comment" />
		<result column="MODIFY_DATE" property="modifyDate" />
		<result column="LEVEL" property="level" />
	</resultMap>

  <!-- 게시글 목록 조회수 증가시 -->
	<select id="selectPostListCount" resultType="_int">
		select 
					 "count"
			from t_post
		 where file_status = 'Y'
	</select>

	
	<!-- 게시글 목록 조회 -->
	<select id="selectPostList" resultMap="postResultMap">
		select 
      P.POST_NO
    , P.POST_TITLE 
    , USER_NAME 
    , REGIST_DATE
    , FILE_STATUS
    , "COUNT" as count 
    , POST_TOP
  from
      T_POST P
   JOIN 
	    T_USER U 
	ON 
	    P.USER_NO = U.USER_NO  
 WHERE 
    BOARD_TYPE_NO = 2
	ORDER BY 
	    P.POST_NO ASC 
	</select>
	
	<!-- 게시글 등록 -->
<insert id="insertPost">
		insert
			into t_post
			(
				post_no
			, BOARD_TYPE_NO	
			, post_title
			, user_no
			, post_content
			
			)
			  values
		  (
		    'P'||LPAD(SEQ_PNO.NEXTVAL,4,0)
		  , '2'     
		  , #{postTitle}
		  , #{writerName}
		  , #{postContent}
		  )
	</insert> 
	 
	 <!-- 첨부파일 등록 -->
	 <insert id="insertAttach">
	INSERT 
		INTO 
				T_ATTACHMENT 
		(
         FILE_NO
       , FILE_PATH
       , FILESYSTEM_NAME
       , ORIGINAL_NAME
       , UPLOAD_DATE
       , REF_TYPE
       , POST_NO
     )
     VALUES
     (
        SEQ_ATNO.NEXTVAL
      , #{filePath}
      , #{filesystemName}
      , #{originalName}
      , SYSDATE
      , #{refType}
     <choose>
	  	<when test="postNo == null">
	  		, 'P' || LPAD(SEQ_PNO.CURRVAL, 4, 0) 
	  	</when>
  	<otherwise>
  		, #{postNo}
  	</otherwise>
   </choose>
         
     )
    </insert>
    
				<!-- 게시글 상세페이지 조회 -->
				<select id="selectPostDetail" resultMap="postResultMap">
			 select
           P.POST_NO,
           P.BOARD_TYPE_NO,
           P.USER_NO,
           P.POST_TITLE,
           P.POST_CONTENT,
           U.USER_NAME, 
           U.USER_ID AS WRITER_ID,     
           P."COUNT",
           TO_CHAR(P.REGIST_DATE, 'YYYY-MM-DD') AS REGIST_DATE,
           A.FILE_NO,
           A.FILE_PATH,
           A.FILESYSTEM_NAME,
           A.ORIGINAL_NAME,
           (
               SELECT COUNT(*)
               FROM T_ATTACHMENT A
               WHERE A.REF_TYPE = 'B'  
                 AND A.APPR_NO = #{p.postNo}
           ) AS ATTACH_COUNT,
           (
               SELECT COUNT(*)
               FROM T_LIKE L
               WHERE L.LIKE_STATUS = 'Y' 
                 AND L.POST_NO = #{p.postNo}
           ) AS LIKE_COUNT
      from T_POST P
      join T_USER U on (P.USER_NO = U.USER_NO)
      left join T_ATTACHMENT A on (A.REF_TYPE = 'B' and A.POST_NO = P.POST_NO)
     where P.POST_NO =#{postNo}
  order by P.POST_NO DESC
				</select>	
				
				<!-- 첨부파일 조회 -->
				<select id="selectAttachList" resultMap="attachResultMap">
					select
				        FILE_NO
				      , FILE_PATH
				      , FILESYSTEM_NAME
				      , ORIGINAL_NAME
				      , POST_NO
				  from  T_ATTACHMENT
				  where POST_NO = #{no}
				</select>
				
				
				<!-- 게시판 조회수 추가 -->
				<update id="updateIncreaseCount">
				  UPDATE T_POST
				  SET COUNT = COUNT + 1
			 where post_no = #{postNo}
				</update>


		   <!-- 게시글 삭제 -->
		  	<delete id="deletePost">
					delete
					       t_post
					 where post_no = #{postNo}
				</delete>
		
		<!-- 게시글 수정 -->		
	 	<update id="updatePost">
		update 
				   t_post
			 set post_title = #{postTitle}
			   , post_content = #{postContent}
		 where post_no = #{postNo}
	</update>
	
	<!-- 첨부파일 게시글 삭제 -->
	<delete id="deleteAttach">
		delete
		  from t_attachment
		 <where>
		  <foreach item="no" collection="array"
		  	open="file_no in (" separator="," close=")">
		  	#{no}
		  </foreach>
		</where> 
	</delete> 
	
	<!-- 게시글 첨부파일 삭제 --> 
	<select id="selectDelAttach" resultMap="attachResultMap">
		select
					 file_path
				 , filesystem_name
		  from t_attachment 
		<where>
		  <foreach item="no" collection="array"
		  	open="file_no in (" separator="," close=")">
		  	#{no}
		  </foreach>
		</where>
	</select>
    
	<!-- 댓글 영역 -->
	
	<!-- 게시글 댓글 목록조회 -->
	<select id="selectCommentList" resultMap="commentResultMap">
		select
					   comment_no
					 , user_name as "commentWriter"
					 , "COMMENT"
					 , to_char(regist_date, 'YYYY-MM-DD') regist_date
				from t_comment c
				join t_user using (user_no)
			 where post_no = #{postNo}
			 order by comment_no desc
		</select>
		
		
	<!-- 게시글 댓글 등록 -->
   <insert id="insertComment" >
       INSERT 
         INTO T_COMMENT 	
       	  (
           	COMMENT_NO
           , USER_NO
           , POST_NO
           , COMMENTER_ID
           , "COMMENT"
           , REGIST_DATE
           , MODIFY_DATE
       )
       VALUES (
          SEQ_CMNO.NEXTVAL
         , #{userNo}
         , #{postNo}
         , #{commentWriter}
         , #{comment}
         , SYSDATE
         , SYSDATE
       )
   </insert>
    
</mapper>
	
	